<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:c="http://www.springframework.org/schema/c" xmlns:cache="http://www.springframework.org/schema/cache" xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
	<context:component-scan base-package="com.doubleselect.controller" />
	
	
	<!--  <mvc:annotation-driven/>    --> 
	<!--
	  @ResponseBody之后返回字符串中中文可能会出现乱码 因为sping
	  mvc默认是text/plain;charset=ISO-8859-1，要支持中需做如下配置指定编码格式
	 
	 spring注解@ResponseBody处理ajax请求，json数据类型
	 -->
	<!-- Spring MVC JSON配置 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
			
				<!-- <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"> -->
				<bean id="fastJsonHttpMessageConverter" class="com.doubleselect.util.JsonTool.FastJsonHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
						<!-- 	解决浏览器兼容， 避免IE出现下载JSON文件的情况 -->
							<value>text/html;charset=UTF-8</value>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				
				<bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
						<!-- 	解决浏览器兼容， 避免IE出现下载JSON文件的情况 -->
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
		<!-- 这样写法也是正确的 -->
		<!-- 
		<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		  <property name="messageConverters">
		   <list>
		    <bean
		     class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		     <property name="supportedMediaTypes">
		      <list>
		       返回字符串格式json
		       <value>text/html;charset=UTF-8</value>
		      </list>
		     </property>
		    </bean>
		   </list>
		  </property>
	 </bean> -->

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/view/" p:suffix=".jsp" />

	<!-- 配置静态资源  已经在web.xml文件中配置，可以注释掉
	<mvc:default-servlet-handler/>
	-->
	
	
	
	<mvc:interceptors>  
	
      	<mvc:interceptor>	
      		<mvc:mapping path="/sys/**" />
      		<mvc:mapping path="/student/**" />
      		<mvc:mapping path="/teacher/**" />
      		<mvc:mapping path="/volunteer/**" />
      		<mvc:mapping path="/match/**" />
      		<mvc:mapping path="/manage/**" />
      		<mvc:exclude-mapping path="/sys/userController/login"/>
      		<mvc:exclude-mapping path="/sys/authController/checkAuth"/>
      		<mvc:exclude-mapping path="/sys/userController/indexVali"/>
            <bean class="com.doubleselect.interceptor.LoginInterceptor"/>  
      	</mvc:interceptor>
      	
      <!-- 	配置拦截器(不)作用的路径 -->
      	<mvc:interceptor>
      		<mvc:mapping path="/sys/**" />
      		<mvc:mapping path="/student/**" />
      		<mvc:mapping path="/teacher/**" />
      		<mvc:mapping path="/volunteer/**" />
      		<mvc:mapping path="/match/**" />
      		<mvc:mapping path="/manage/**" />
      		<mvc:exclude-mapping path="/sys/userController/login"/> 
      		<mvc:exclude-mapping path="/sys/authController/checkAuth"/>
      		<mvc:exclude-mapping path="/sys/userController/indexVali"/>
      		<mvc:exclude-mapping path="/**/preAdd"/>
      		<mvc:exclude-mapping path="/**/preEdit"/>
      	<!-- 	自定义的拦截器 -->
            <bean class="com.doubleselect.interceptor.AuthInterceptor"/> 
           <!--    或者是通过list属性注入也行	 -->
	        <!-- 	<property name="excludeUrls">
						<list>		
							<value>/authController/tree</value>
							<value>/userController/reg</value>
							<value>/userController/login</value>
						</list>
				</property>  -->
			 
      	</mvc:interceptor> 
      	
     <!--  配置cookie拦截器 -->
      	 <!-- 	配置拦截器(不)作用的路径 -->
      	<mvc:interceptor>
      		<mvc:mapping path="/login.do" />
      		<!-- 自定义的拦截器 -->
            <bean class="com.doubleselect.interceptor.PowerInterceptor"/> 
             <!-- 或者是通过list属性注入也行	
	        	<property name="excludeUrls">
						<list>		
							<value>/authController/tree</value>
							<value>/userController/reg</value>
							<value>/userController/login</value>
						</list>
				</property> 
			--> 
      	</mvc:interceptor> 
      	
      <!-- 表单重复提交拦截器	     
	    <mvc:interceptor>
	    
	        <bean class="com.doubleselect.interceptor.TokenInterceptor" />
	    </mvc:interceptor> -->
		
    </mvc:interceptors> 

</beans>
